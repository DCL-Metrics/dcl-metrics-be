name: Deploy Staging
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to push to staging'
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    container: node:10.18-jessie

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      fail-fast: true

    env:
      DATABASE_ENV: test
      DATABASE_POOL_TIMEOUT: 10
      DATABASE_URL: postgres://postgres@localhost:5432/dclund-test
      DATABASE_USER: postgres
      FAT_BOY_DATABASE_URL: postgres://postgres@localhost:5432/dclund-test
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      RACK_ENV: test

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          # runs 'bundle install' and caches installed gems automatically
          bundler-cache: true

      - name: Install PostgreSQL client
        run: sudo apt-get -yqq install libpq-dev

      - name: Connect to PostgreSQL
        run: |
          bundle exec rake db:create
          bundle exec rake db:migrate

      - name: Run tests
        run: bundle exec rake

      # TODO: notify failure to telegram

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        id: deploy
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_STAGING_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}

      - name: Notify deployment
        uses: appleboy/telegram-action@master
        if: always()
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          disable_web_page_preview: true
          format: html
          message: |
            Staging deployment ${{ steps.deploy.outcome == 'success' && 'succeeded ✅' || 'failed ❌' }}
            Repo: ${{ github.repository }}
            Author: ${{ github.actor }}
            Branch: ${{ inputs.branch }}
